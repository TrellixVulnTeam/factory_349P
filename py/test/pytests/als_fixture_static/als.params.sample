# -*- mode: python -*-
{
  # Version of this test parameter file.
  'version': 'v0.01',

  'ui': {
    # Ignore enter key in serial number input.  (Some barcode readers
    # automatically input enter key, but we may prefer not to start the test
    # immediately after scanning barcode.)
    # This flag does not change the behavior of Space key.
    'ignore_enter_key': False
    },

  'sn': {
    # Whether to auto read serial number.
    'auto_read': True,
  },

  # Expected time duration of each test stage (used for progress bar).
  'chk_point': [
    ('als_start', 0.1),
    ('als_sn', 0.1),
    ('als_init', 0.1),
    ('als_light1', 2.00),
    ('als_light2', 2.00),
    ('als_light3', 2.00),
    ('als_calculation', 1.00),
    ('als_vpd', 0.5),
    ('als_validating', 2.0),
    ('als_end', 0.5),
    ('als_data_saved', 0)
    ],

  # ALS sensor parameters
  'conf': {
    # Light seq command
    # sequence of light name defined in chamber_cmd of ALS test argument
    'light_seq': ['OFF', 'LUX1', 'LUX2', 'LUX3'],

    # Number of samples to read
    'n_samples': 5,

    # Delay betwen each sample
    'read_delay': 2.0,

    # Time for wait light switch
    'light_delay': 3.0,

    # List of light intensity to test
    'luxs': [0, 50, 200],

    # Validating light name defined in chamber_cmd for ALS test argument
    'validating_light': 'LUX3',

    # Validating light intensity for the validating light name
    'validating_lux': 350,

    # Relative error of calibrated ALS value
    'validating_err_limit': 0.2,

    # Default calibration values for validating function.
    # Though these values can be obtained from the uncalibrated als iio bus,
    # but since the calibration may fail, then we need to do the calibration
    # again, we will lose the values to do validation, so better save the
    # values here.
    'default_sf': 0.308800,
    'default_bias': -256,

    # Command for saving measured result into VPD
    'set_vpd_slope': 'vpd -s "als_cal_slope"="%f"',
    'set_vpd_intercept': 'vpd -s "als_cal_intercept"="%f"',
  }
}
